<?php

declare(strict_types=1);

/**
 * Fangx's Packages
 *
 * @link     https://github.com/nfangxu/hyperf-sqlite-driver
 * @document https://github.com/nfangxu/hyperf-sqlite-driver/blob/master/README.md
 * @contact  nfangxu@gmail.com
 * @author   nfangxu
 */

namespace Fangx\SQLite;

use Fangx\SQLite\Connectors\SQLiteConnector;
use Hyperf\Database\Connectors\ConnectionFactory;
use Hyperf\Database\Connectors\ConnectorInterface;
use InvalidArgumentException;

class SupportSQLiteConnectionFactory extends ConnectionFactory
{
    /**
     * Create a connector instance based on the configuration.
     *
     * @throws \InvalidArgumentException
     * @return ConnectorInterface
     */
    public function createConnector(array $config)
    {
        try {
            return parent::createConnector($config);
        } catch (InvalidArgumentException $exception) {
            if ($config['driver'] === 'sqlite') {
                return new SQLiteConnector();
            }

            throw $exception;
        }
    }

    /**
     * Create a new connection instance.
     *
     * @param string $driver
     * @param \Closure|\PDO $connection
     * @param string $database
     * @param string $prefix
     * @throws \InvalidArgumentException
     * @return \Hyperf\Database\Connection
     */
    protected function createConnection($driver, $connection, $database, $prefix = '', array $config = [])
    {
        try {
            return parent::createConnection($driver, $connection, $database, $prefix, $config); // TODO: Change the autogenerated stub
        } catch (InvalidArgumentException $exception) {
            if ($driver === 'sqlite') {
                return new SQLiteConnection($connection, $database, $prefix, $config);
            }

            throw $exception;
        }
    }
}
